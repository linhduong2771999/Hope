[{"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\reportWebVitals.js":"1","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\index.js":"2","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\store.js":"3","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\store\\reducers\\index.js":"4","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\App.js":"5","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\sagas\\index.js":"6","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\modules\\Auth\\Login\\Login.js":"7","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\modules\\Wrapper\\Wrapper.js":"8","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\routers\\index.js":"9","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\modules\\Wrapper\\Footer\\Footer.js":"10","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\modules\\Wrapper\\Sidebar\\Sidebar.js":"11","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\components\\FontAwesome\\FontAwesome.js":"12","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\modules\\Home\\Home.js":"13","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\modules\\Auth\\Signup\\Signup.js":"14","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\components\\SideNavbar\\SideNavbar.js":"15","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\modules\\Wrapper\\Header\\Header.js":"16","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\helpers\\localStorage.js":"17","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\store\\reducers\\modalPopUpReducers.js":"18","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\store\\actions\\modalPopUpActions.js":"19","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\store\\actions\\index.js":"20","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\components\\Button\\Button.js":"21"},{"size":362,"mtime":1608897102704,"results":"22","hashOfConfig":"23"},{"size":633,"mtime":1610626629470,"results":"24","hashOfConfig":"23"},{"size":656,"mtime":1610626478883,"results":"25","hashOfConfig":"23"},{"size":295,"mtime":1616481772702,"results":"26","hashOfConfig":"23"},{"size":330,"mtime":1614060127262,"results":"27","hashOfConfig":"23"},{"size":292,"mtime":1610626070022,"results":"28","hashOfConfig":"23"},{"size":1290,"mtime":1619250817111,"results":"29","hashOfConfig":"23"},{"size":858,"mtime":1618915862337,"results":"30","hashOfConfig":"23"},{"size":644,"mtime":1616056667573,"results":"31","hashOfConfig":"23"},{"size":226,"mtime":1613980879235,"results":"32","hashOfConfig":"23"},{"size":6902,"mtime":1618833698337,"results":"33","hashOfConfig":"23"},{"size":543,"mtime":1615953183304,"results":"34","hashOfConfig":"23"},{"size":220,"mtime":1616056626140,"results":"35","hashOfConfig":"23"},{"size":163,"mtime":1613980262026,"results":"36","hashOfConfig":"23"},{"size":2350,"mtime":1616387918061,"results":"37","hashOfConfig":"23"},{"size":12254,"mtime":1618915685443,"results":"38","hashOfConfig":"23"},{"size":1313,"mtime":1616478834687,"results":"39","hashOfConfig":"23"},{"size":950,"mtime":1616613145924,"results":"40","hashOfConfig":"23"},{"size":373,"mtime":1616481644550,"results":"41","hashOfConfig":"23"},{"size":95,"mtime":1616481731679,"results":"42","hashOfConfig":"23"},{"size":559,"mtime":1616928797720,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"i0o7nr",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\reportWebVitals.js",[],["95","96"],"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\index.js",[],["97","98"],"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\store.js",["99","100","101","102"],"import {createStore, applyMiddleware } from \"redux\";\r\nimport {createLogger} from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from \"./store/reducers/index\";\r\nimport Saga from \"./sagas/index\";\r\nconst loggerMiddlware = createLogger({\r\n    predicate: () => process.env.NODE_ENV === 'development'\r\n})\r\n\r\nconst sagasMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagasMiddleware, loggerMiddlware];\r\n\r\n\r\nexport default (initialState = {}) => {\r\n    const store = createStore(\r\n        rootReducer,\r\n        // applyMiddleware(...middlewares)\r\n    )\r\n    // sagasMiddleware.run(Saga)\r\n    return { store }\r\n}\r\n","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\store\\reducers\\index.js",[],["103","104"],"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\App.js",[],["105","106"],"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\sagas\\index.js",["107"],"import { all, fork } from \"redux-saga/effects\";\r\nimport { flatten } from 'lodash/array';\r\nimport { values } from 'lodash/object';\r\nconst sagaList = [\r\n\r\n]\r\n\r\nexport default function* () {\r\n    yield all(\r\n        flatten(sagaList.map(sagas => values(sagas))).map(saga => fork(saga))\r\n    )\r\n}","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\modules\\Auth\\Login\\Login.js",[],"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\modules\\Wrapper\\Wrapper.js",[],"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\routers\\index.js",[],"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\modules\\Wrapper\\Footer\\Footer.js",[],"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\modules\\Wrapper\\Sidebar\\Sidebar.js",["108","109","110"],"import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// action\r\nimport { ModalPopupActions } from \"../../../store/actions/index\";\r\n// component\r\nimport FontAwesome from \"../../../components/FontAwesome/FontAwesome\";\r\nimport HomeFont from \"../../../assets/images/svg/home.svg\";\r\nimport ShoppingBasket from \"../../../assets/images/svg/shopping-basket.svg\";\r\nimport NewsPaper from \"../../../assets/images/svg/newspaper.svg\";\r\nimport UserCog from \"../../../assets/images/svg/user-cog.svg\";\r\nimport GamePad from \"../../../assets/images/svg/gamepad.svg\";\r\nimport Logo from \"../../../assets/images/common/logo.png\";\r\n\r\nimport { setLocalStorage, getLocalStorage } from \"../../../helpers/localStorage\";\r\nconst listOfMenu = [\r\n  {\r\n    key: \"menu0\",\r\n    link: \"/\",\r\n    icon: HomeFont,\r\n    icon_name: \"Home icon\",\r\n    text: \"Home\",\r\n  },\r\n  {\r\n    key: \"submenu\",\r\n    link: \"#\",\r\n    icon: ShoppingBasket,\r\n    icon_name: \"Shopping icon\",\r\n    text: \"E-commerce\",\r\n    subMenu: [\r\n      { key: \"submenu0\", link: \"/shopping/smartphone\", text: \"Smartphone - Ipad\" },\r\n      { key: \"submenu1\", link: \"/shopping/electric\", text: \"Electric\" },\r\n      { key: \"submenu2\", link: \"/shopping/fashion\", text: \"Fashion - Accessories\" },\r\n      { key: \"submenu3\", link: \"/shopping/laptop\", text: \"Laptop - IT devices\" },\r\n      { key: \"submenu4\", link: \"/shopping/decorations\", text: \"Decorations - Pretties\" },\r\n    ],\r\n    func: true,\r\n  },\r\n  {\r\n    key: \"menu2\",\r\n    link: \"/newsfeed\",\r\n    icon: NewsPaper,\r\n    icon_name: \"Newsfeed icon\",\r\n    text: \"Newsfeed\",\r\n  },\r\n  {\r\n    key: \"menu3\",\r\n    link: \"/game\",\r\n    icon: GamePad,\r\n    icon_name: \"Game icon\",\r\n    text: \"Games\",\r\n  },\r\n  {\r\n    key: \"menu4\",\r\n    link: \"/user_management\",\r\n    icon: UserCog,\r\n    icon_name: \"User icon\",\r\n    text: \"Management\",\r\n  },\r\n];\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isCollapse: false,\r\n      collapseClassName: \"\",\r\n      selectedLinkIndex: \"\",\r\n    };\r\n\r\n    this.sidebarNavbar = React.createRef();\r\n  } \r\n\r\n  componentDidMount = () => {\r\n      const selectedLinkIndex = getLocalStorage(\"sidebar-menu-item-selected\") || \"\";\r\n      if(selectedLinkIndex !== undefined && selectedLinkIndex.startsWith(\"submenu\")) this.toggleSubmenu();\r\n      this.props.openPopup({popupName: \"collapseSideNavbar\", popupProps: null});\r\n  }\r\n\r\n  toggleSubmenu = () => {\r\n    this.setState(\r\n      {\r\n        isCollapse: !this.state.isCollapse,\r\n      },\r\n      () => this.triggerSubmenuAnimate(this.state.isCollapse)\r\n    );\r\n  };\r\n\r\n  triggerSubmenuAnimate = (isCollapse) => {\r\n    let collapseClassName = \"submenu--slide-up\";\r\n    if (isCollapse) collapseClassName = \"submenu--slide-down\";\r\n    this.setState({\r\n      collapseClassName,\r\n    });\r\n  };\r\n\r\n  onSelectedLink = (payload) => {\r\n    const { selectedLinkIndex } = payload;\r\n\r\n    if (selectedLinkIndex === \"submenu\") this.toggleSubmenu();\r\n\r\n    if(this.state.collapseClassName === \"submenu--slide-down\" && selectedLinkIndex.startsWith(\"menu\")){\r\n        this.toggleSubmenu()\r\n    }\r\n    this.setState({\r\n      selectedLinkIndex,\r\n    }, () => setLocalStorage(\"sidebar-menu-item-selected\", selectedLinkIndex, {minutes: 30}));\r\n  };\r\n\r\n  renderSubMenu = (submenu) => {\r\n    const { collapseClassName } = this.state;\r\n    return (\r\n      <ul className={`submenu ${collapseClassName}`}>\r\n        {submenu.map((item, index) => {\r\n            const activeLinkClassName = item.link === this.props.location.pathname && \"active-link\";\r\n          return (\r\n            <li className=\"submenu__item\" key={index}>\r\n              <Link\r\n                to={item.link}\r\n                className={`submenu__link ${activeLinkClassName}`}\r\n                onClick={() => this.onSelectedLink({ selectedLinkIndex: item.key })}\r\n              >\r\n                <span className=\"submenu__text\">{item.text}</span>\r\n              </Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  renderMenuItem = () => {\r\n    const { isCollapse, selectedLinkIndex } = this.state;\r\n    return listOfMenu.map((item, index) => {\r\n\r\n      const activeLinkClassName = item.link === this.props.location.pathname ? \"active-link\" : \"\";\r\n      const selectedLinkClassName = item.key === selectedLinkIndex ? \"selected-link\" : \"\";\r\n      const collapseIconClassName = isCollapse\r\n        ? \"menu__icon--collapse-minus\"\r\n        : \"menu__icon--collapse-plus\";\r\n      const showCollapseIcon = item.subMenu ? collapseIconClassName : \"\";\r\n\r\n        return (\r\n          <li className=\"menu__item\" key={index}>\r\n            <Link\r\n              to={item.link}\r\n              className=\"menu__link\"\r\n              onClick={() =>\r\n                this.onSelectedLink({\r\n                  selectedLinkIndex: item.key,\r\n                })\r\n              }\r\n              className={`menu__link ${selectedLinkClassName} ${showCollapseIcon} ${activeLinkClassName}`}\r\n            >\r\n              <span className=\"menu__icon\">\r\n                <FontAwesome\r\n                  src={item.icon}\r\n                  width=\"23px\"\r\n                  height=\"23px\"\r\n                  alt={item.icon_name}\r\n                />\r\n              </span>\r\n              <span className=\"menu__text\">{item.text}</span>\r\n             </Link>\r\n            {item.subMenu && this.renderSubMenu(item.subMenu)}\r\n          </li> \r\n        );\r\n    });\r\n  };\r\n\r\n  renderMenu = () => <ul className=\"menu\">{this.renderMenuItem()}</ul>;\r\n  \r\n  toggleSidebarResponsive = () => {\r\n    if(this.sidebarNavbar.current.style.marginLeft === \"0px\"){\r\n      this.sidebarNavbar.current.style.marginLeft = \"-270px\";\r\n  } else {\r\n      this.sidebarNavbar.current.style.marginLeft = \"0\";\r\n  }\r\n  }\r\n  render() {\r\n    const {isOpen} = this.props.stateOfModalPopupReducers;\r\n    // const stretchClassName = isOpen ? \"sidebar--stretch\" : \"sidebar--shrink\";\r\n    return (\r\n      <div className={`sidebar`} id=\"sidebar\" ref={this.sidebarNavbar}>\r\n        <div className=\"sidebar-wrap\">\r\n          <div className=\"sidebar-header\">\r\n            \r\n          </div>\r\n          <div className=\"sidebar-main\">\r\n            <div className=\"profile\">\r\n              <div className=\"profile__img\"></div>\r\n              <div className=\"profile__info\"></div>\r\n            </div>\r\n            {this.renderMenu()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stateOfModalPopupReducers: state.ModalPopupReducers\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    openPopup: (payload) => dispatch(ModalPopupActions.openPopup(payload)),\r\n    hidePopup: (payload) => dispatch(ModalPopupActions.hidePopup(payload))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps, null, {forwardRef : true})(Sidebar);\r\n","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\components\\FontAwesome\\FontAwesome.js",[],"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\modules\\Home\\Home.js",[],"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\modules\\Auth\\Signup\\Signup.js",[],"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\components\\SideNavbar\\SideNavbar.js",["111"],"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\modules\\Wrapper\\Header\\Header.js",["112","113","114","115","116","117","118","119","120"],"import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { ModalPopupActions } from \"../../../store/actions/index\";\r\nimport Button from \"../../../components/Button/Button\";\r\nimport FontAwesome from \"../../../components/FontAwesome/FontAwesome\";\r\n\r\n\r\nimport Logo from \"../../../assets/images/common/logo.png\";\r\nimport DefaultUserMale from \"../../../assets/images/common/default-user-male.png\";\r\nimport DefaultUserFemale from \"../../../assets/images/common/default-user-female.png\";\r\nimport Bell from \"../../../assets/images/svg/bell.svg\";\r\nimport Cart from \"../../../assets/images/svg/cart-arrow-down.svg\";\r\nimport Bars from \"../../../assets/images/svg/bars.svg\";\r\nimport Profile from \"../../../assets/images/svg/user.svg\";\r\nimport Account from \"../../../assets/images/svg/lock-alt.svg\";\r\nimport Cog from \"../../../assets/images/svg/cog.svg\";\r\nimport BtnCollapseNavbar from \"../../../assets/images/svg/sort-alt.svg\"\r\n\r\nclass Header extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state =  {\r\n            isCollapse: false\r\n        }\r\n\r\n        this.headerBrand = React.createRef();\r\n        this.headerNavbar = React.createRef();\r\n        this.headerNavbarSubmenu = React.createRef();\r\n    }\r\n\r\n    // componentWillUnmount = () => {\r\n    //     const headerNavbar = document.getElementById(\"header-navbar\");\r\n    //     headerNavbar.style.maxHeight = \"0px\";\r\n    // }\r\n    toggleSubMenu = () => {\r\n        if(!this.headerNavbarSubmenu.current.classList.contains(\"submenu-header--slide-down\")) {\r\n            this.headerNavbarSubmenu.current.classList.add(\"submenu-header--slide-down\");\r\n        } else{\r\n            this.headerNavbarSubmenu.current.classList.remove(\"submenu-header--slide-down\");\r\n        }\r\n    }\r\n\r\n    toggleSideNavbar = () => {\r\n        // const { isOpen } = this.props.stateOfModalPopupReducers;\r\n        const sidebar = document.getElementById(\"sidebar\");\r\n        const hopeContent = document.getElementById(\"hope-content\");\r\n        \r\n        if(!this.headerBrand.current.classList.contains(\"header--shrink\")){\r\n            this.headerBrand.current.classList.add(\"header--shrink\");\r\n            this.headerBrand.current.classList.remove(\"header--stretch\");\r\n\r\n            sidebar.classList.add(\"sidebar--shrink\");\r\n            sidebar.classList.remove(\"sidebar--stretch\");\r\n\r\n            hopeContent.classList.add(\"hope-content--shrink\");\r\n            hopeContent.classList.remove(\"hope-content--stretch\");\r\n        } else {\r\n            this.headerBrand.current.classList.remove(\"header--shrink\");\r\n            this.headerBrand.current.classList.add(\"header--stretch\");\r\n\r\n            sidebar.classList.remove(\"sidebar--shrink\");\r\n            sidebar.classList.add(\"sidebar--stretch\");\r\n\r\n            hopeContent.classList.remove(\"hope-content--shrink\");\r\n            hopeContent.classList.add(\"hope-content--stretch\");\r\n        }\r\n        console.log(sidebar);\r\n        // if(isOpen){\r\n        //     this.props.hidePopup({popupName: \"collapseSideNavbar\", popupProps: null});\r\n        // } else {\r\n        //     this.props.openPopup({popupName: \"collapseSideNavbar\", popupProps: null});\r\n        // }\r\n    }\r\n\r\n    toggleHeaderNavbar = () => {\r\n        if(this.headerNavbar.current.style.maxHeight === \"70px\"){\r\n            this.headerNavbar.current.style.maxHeight = \"0px\";\r\n        } else {\r\n            this.headerNavbar.current.style.maxHeight = \"70px\";\r\n        }\r\n    }\r\n\r\n    toggleSideNavbarResponsive = () => {\r\n        this.props.toggleSidebarResponsive();\r\n    }\r\n\r\n    renderCollapseBtn = () => (\r\n        <button className=\"btn-collapse\" onClick={this.toggleSideNavbar}>\r\n            <FontAwesome \r\n                className=\"btn-collapse-icon\"\r\n                src={Bars}\r\n                width=\"23px\"\r\n                height=\"23px\"\r\n                alt=\"Hope logo\"\r\n            /> \r\n        </button>\r\n    )\r\n    render() {\r\n        const { isOpen } = this.props.stateOfModalPopupReducers;\r\n        const stretchClassName = isOpen ? \"header--stretch\" : \"header--shrink\";\r\n        return (\r\n            <div className={`header`}>\r\n                <div className={`header-container `}>\r\n                    <div className={`header-brand`} ref={this.headerBrand}>\r\n                        <div className=\"brand-container\">\r\n                            <div className=\"collapse-sidebar-responsive\">\r\n                                <Button className=\"btn--collapse-sidebar-responsive\" onClick={this.toggleSideNavbarResponsive}>\r\n                                    <FontAwesome\r\n                                        className=\"btn--collapse-sidebar-responsive__icon\"\r\n                                        src={Bars}\r\n                                        width=\"20px\"\r\n                                        height=\"20px\"\r\n                                        alt=\"Button collapse sidebar responsive\"\r\n                                    />\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"brand\">        \r\n                             <Link className=\"brand__link\" to=\"/\">\r\n                                    <FontAwesome\r\n                                        className=\"brand__logo\"\r\n                                        src={Logo}\r\n                                        width=\"30px\"\r\n                                        height=\"30px\"\r\n                                        alt=\"Hope logo\"\r\n                                    />\r\n                                    <span className=\"brand__name\">\r\n                                        Atrio\r\n                                    </span>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"collapse-navbar\">\r\n                                <Button className=\"btn--collapse-navbar\" onClick={this.toggleHeaderNavbar}>\r\n                                    <FontAwesome \r\n                                        className=\"btn--collapse-navbar__icon\"\r\n                                        src={BtnCollapseNavbar}\r\n                                        width=\"20px\"\r\n                                        height=\"20px\"\r\n                                        alt=\"Button collapse navbar\"\r\n                                    />\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"header-navbar\" id=\"header-navbar\" ref={this.headerNavbar}>\r\n                        <div className=\"header-navbar-container\">\r\n                            <div className=\"collapse\">\r\n                                {this.renderCollapseBtn()}\r\n                            </div>\r\n                            <ul className=\"menu\">\r\n                                <li className=\"menu__item\">\r\n                                    <a className=\"menu__link\">\r\n                                    <span className=\"menu__icon\">\r\n                                        <FontAwesome \r\n                                            className=\"menu__icon\" \r\n                                            src={Bell} \r\n                                            width=\"23px\" \r\n                                            height=\"23px\" \r\n                                            alt=\"Bell icon\"\r\n                                        />\r\n                                    </span>\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"menu__item\">\r\n                                    <a className=\"menu__link\">\r\n                                        <span className=\"menu__icon\">\r\n                                            <FontAwesome \r\n                                                src={Cart} \r\n                                                width=\"23px\" \r\n                                                height=\"23px\" \r\n                                                alt=\"Cart icon\"\r\n                                            />\r\n                                        </span>\r\n                                    </a>\r\n                                    </li>\r\n                                <li className=\"menu__item\">\r\n                                    <a className=\"menu__link\">\r\n                                        <span className=\"menu__avatar\" onClick={this.toggleSubMenu}>\r\n                                            <img src={DefaultUserFemale} />\r\n                                        </span>\r\n                                    </a>\r\n                                    \r\n                                    <ul className={`submenu`} ref={this.headerNavbarSubmenu}>\r\n                                        <li className=\"submenu__item\">\r\n                                            <a href=\"#\" className=\"submenu__link\">\r\n                                                <span className=\"submenu__icon\">\r\n                                                    <FontAwesome \r\n                                                        src={Profile} \r\n                                                        width=\"20px\" \r\n                                                        height=\"20px\" \r\n                                                        alt=\"Cart icon\"\r\n                                                    />\r\n                                                </span>\r\n                                                <span className=\"submenu__text\">Your Profile</span>\r\n                                            </a>\r\n                                        </li>\r\n                                        <li className=\"submenu__item\">\r\n                                            <a href=\"#\" className=\"submenu__link\">\r\n                                                <span className=\"submenu__icon\">\r\n                                                    <FontAwesome \r\n                                                        src={Account} \r\n                                                        width=\"20px\" \r\n                                                        height=\"20px\" \r\n                                                        alt=\"Cart icon\"\r\n                                                    />\r\n                                                </span>\r\n                                                <span className=\"submenu__text\">Your Account</span>\r\n                                            </a>\r\n                                        </li>\r\n                                        <li className=\"submenu__item\">\r\n                                            <a href=\"#\" className=\"submenu__link\">\r\n                                                <span className=\"submenu__icon\">\r\n                                                        <FontAwesome \r\n                                                            src={Cog} \r\n                                                            width=\"20px\" \r\n                                                            height=\"20px\" \r\n                                                            alt=\"Cart icon\"\r\n                                                        />\r\n                                                    </span>\r\n                                                <span className=\"submenu__text\">Setting</span>\r\n                                            </a>\r\n                                        </li>\r\n                                    </ul>\r\n        \r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stateOfModalPopupReducers: state.ModalPopupReducers\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      openPopup: (payload) => dispatch(ModalPopupActions.openPopup(payload)),\r\n      hidePopup: (payload) => dispatch(ModalPopupActions.hidePopup(payload))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\helpers\\localStorage.js",["121"],"export const setTimestamps = (payload) => {\r\n    try{\r\n        const { minutes, hours, month } = payload || 0; \r\n        const now = new Date();\r\n    \r\n        if(minutes) now.setMinutes(now.getMinutes() + minutes);\r\n        if(hours) now.setHours(now.getHours() + hours);\r\n        if(month) now.setMonth(now.getMonth() + month);\r\n    \r\n        return now.getTime();\r\n    } catch(error) {\r\n        return console.log(\"Set timestamp error: \", error)\r\n    }\r\n}\r\n\r\nexport const setLocalStorage = (key, value, date = {}) => {\r\n    if(key === \"\" || !key) return \"Error localstorage key\";\r\n\r\n    let expired = setTimestamps(date);\r\n\r\n    const item = {\r\n        value,\r\n        exp: expired\r\n    }\r\n\r\n    return localStorage.setItem(key, JSON.stringify(item));\r\n}\r\n\r\nexport const getLocalStorage = (key) => {\r\n    if(!key || key === \"\") throw \"Error localstorage key\";\r\n    \r\n    const item = JSON.parse(localStorage.getItem(key));\r\n    const currentTime = new Date();\r\n    if(!item) return null;\r\n\r\n    if(item.exp < currentTime.getTime()) {\r\n        localStorage.removeItem(key);\r\n        return \"Key has expired\";\r\n    }\r\n\r\n    return item.value;\r\n}\r\n\r\nexport const removeLocalStorage = (key) => {\r\n    if(!key || key === \"\") return \"Error localstorage key\";\r\n\r\n    localStorage.removeItem(key);\r\n    return null;\r\n}","C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\store\\reducers\\modalPopUpReducers.js",[],"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\store\\actions\\modalPopUpActions.js",[],"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\store\\actions\\index.js",[],"C:\\Users\\linhd\\OneDrive\\Desktop\\Hope\\client\\src\\components\\Button\\Button.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":22,"nodeType":"130","messageId":"131","endLine":1,"endColumn":37},{"ruleId":"128","severity":1,"message":"132","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":12},{"ruleId":"128","severity":1,"message":"133","line":12,"column":7,"nodeType":"130","messageId":"131","endLine":12,"endColumn":18},{"ruleId":"134","severity":1,"message":"135","line":15,"column":1,"nodeType":"136","endLine":22,"endColumn":2},{"ruleId":"122","replacedBy":"137"},{"ruleId":"124","replacedBy":"138"},{"ruleId":"122","replacedBy":"139"},{"ruleId":"124","replacedBy":"140"},{"ruleId":"134","severity":1,"message":"141","line":8,"column":1,"nodeType":"136","endLine":12,"endColumn":2},{"ruleId":"128","severity":1,"message":"142","line":14,"column":8,"nodeType":"130","messageId":"131","endLine":14,"endColumn":12},{"ruleId":"143","severity":1,"message":"144","line":154,"column":15,"nodeType":"145","endLine":154,"endColumn":107},{"ruleId":"128","severity":1,"message":"146","line":182,"column":12,"nodeType":"130","messageId":"131","endLine":182,"endColumn":18},{"ruleId":"147","severity":1,"message":"148","line":11,"column":17,"nodeType":"149","endLine":11,"endColumn":55},{"ruleId":"128","severity":1,"message":"150","line":10,"column":8,"nodeType":"130","messageId":"131","endLine":10,"endColumn":23},{"ruleId":"128","severity":1,"message":"151","line":101,"column":15,"nodeType":"130","messageId":"131","endLine":101,"endColumn":31},{"ruleId":"147","severity":1,"message":"152","line":152,"column":37,"nodeType":"149","endLine":152,"endColumn":63},{"ruleId":"147","severity":1,"message":"152","line":165,"column":37,"nodeType":"149","endLine":165,"endColumn":63},{"ruleId":"147","severity":1,"message":"152","line":177,"column":37,"nodeType":"149","endLine":177,"endColumn":63},{"ruleId":"153","severity":1,"message":"154","line":179,"column":45,"nodeType":"149","endLine":179,"endColumn":76},{"ruleId":"147","severity":1,"message":"148","line":185,"column":45,"nodeType":"149","endLine":185,"endColumn":83},{"ruleId":"147","severity":1,"message":"148","line":198,"column":45,"nodeType":"149","endLine":198,"endColumn":83},{"ruleId":"147","severity":1,"message":"148","line":211,"column":45,"nodeType":"149","endLine":211,"endColumn":83},{"ruleId":"155","severity":1,"message":"156","line":30,"column":28,"nodeType":"157","messageId":"158","endLine":30,"endColumn":59},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],["159"],["160"],"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'Saga' is defined but never used.","'middlewares' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["159"],["160"],["159"],["160"],"Unexpected default export of anonymous function","'Logo' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'isOpen' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'DefaultUserMale' is defined but never used.","'stretchClassName' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-global-assign","no-unsafe-negation"]